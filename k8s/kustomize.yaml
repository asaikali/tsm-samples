apiVersion: v1
kind: ServiceAccount
metadata:
  name: spring-cloud
  namespace: billboard
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: spring-cloud
  namespace: billboard
rules:
- apiGroups:
  - ""
  - extensions
  - apps
  resources:
  - configmaps
  - pods
  - services
  - endpoints
  - secrets
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: spring-cloud
  namespace: billboard
roleRef:
  apiGroup: ""
  kind: Role
  name: spring-cloud
subjects:
- apiGroup: ""
  kind: ServiceAccount
  name: spring-cloud
  namespace: billboard
---
apiVersion: v1
data:
  foo: Value from K8s config map
kind: ConfigMap
metadata:
  name: message-service
  namespace: billboard
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: billlboard-client
  name: billboard-client
  namespace: billboard
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: billboard-client
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: message-service
  name: message-service
  namespace: billboard
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: message-service
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: billboard-client
  namespace: billboard
spec:
  replicas: 1
  selector:
    matchLabels:
      app: billboard-client
  template:
    metadata:
      labels:
        app: billboard-client
    spec:
      containers:
      - image: asaikali/billboard-client:latest
        imagePullPolicy: Always
        name: billboard-client
        ports:
        - containerPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: message-service
  namespace: billboard
spec:
  replicas: 1
  selector:
    matchLabels:
      app: message-service
  template:
    metadata:
      labels:
        app: message-service
    spec:
      containers:
      - env:
        - name: JAVA_OPTS
          value: -XshowSettings:vm -XX:MaxRAMPercentage=75.0
        image: asaikali/message-service
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
        name: message-service
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          limits:
            cpu: 1000m
            memory: 1G
          requests:
            cpu: 500m
            memory: 1G
      serviceAccountName: spring-cloud
